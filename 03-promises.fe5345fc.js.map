{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QA0CpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAjDbL,EAAKY,iBAAiB,UActB,SAA0BC,GACxBA,EAAMC,iBAEN,MAAMC,EAAQC,OAAOH,EAAMI,OAAOZ,MAAMa,OAClCC,EAAOH,OAAOH,EAAMI,OAAOE,KAAKD,OAChCE,EAASJ,OAAOH,EAAMI,OAAOG,OAAOF,OAE1C,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAInClB,EAHuBkB,EACFN,EAAQM,EAAIF,GAG9BG,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAAzB,GAAS0B,OAAOC,QACd,uBAAqBrB,QAAiBC,MAAU,IAGnDqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBkB,EAAAzB,GAAS0B,OAAOG,QACd,sBAAoBvB,QAAeC,MAAU,G,CAIrDQ,EAAMI,OAAOW,O,IApCf5B,EAAKY,iBAAiB,SAEtB,WACE,MAAMP,EAAQW,OAAOhB,EAAKK,MAAMa,OAC1BC,EAAOH,OAAOhB,EAAKmB,KAAKD,OACxBE,EAASJ,OAAOhB,EAAKoB,OAAOF,OAElC,GAAIb,EAAQ,GAAKc,EAAO,GAAKC,EAAS,EAEpC,YADAG,EAAAzB,GAAS0B,OAAOG,QAAQ,kC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', hendleFormSubmit);\nform.addEventListener('input', handleFormIsLessThenThero);\n\nfunction handleFormIsLessThenThero() {\n  const delay = Number(form.delay.value);\n  const step = Number(form.step.value);\n  const amount = Number(form.amount.value);\n\n  if (delay < 0 || step < 0 || amount < 0) {\n    Notiflix.Notify.failure('Value must be greater than zero');\n    return;\n  }\n}\n\nfunction hendleFormSubmit(event) {\n  event.preventDefault();\n\n  const delay = Number(event.target.delay.value);\n  const step = Number(event.target.step.value);\n  const amount = Number(event.target.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    const amountPosition = i;\n    const currentDelay = delay + i * step;\n\n    createPromise(amountPosition, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  event.target.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","Number","target","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.fe5345fc.js.map"}