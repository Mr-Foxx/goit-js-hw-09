{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,QAiCpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEK,SAAAR,EAAUS,MAAAR,IAEpBG,EAAO,CAAEI,SAAAR,EAAUS,MAAAR,G,GAEpBA,E,IAEFS,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBG,EAAAlB,GAASmB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAEvEO,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,EAAAlB,GAASmB,OAAOI,QAAQ,sBAAqCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IA9CzEb,EAAKsB,iBAAiB,UActB,SAA0BC,GACxBA,EAAMC,iBAMN,IAJA,IAAMX,EAAQY,OAAOzB,EAAKa,MAAMa,OAC1BC,EAAOF,OAAOzB,EAAK2B,KAAKD,OACxBE,EAASH,OAAOzB,EAAK4B,OAAOF,OAEzBG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAInC1B,EAHuB0B,EACFhB,EAAQgB,EAAIF,GAIjC3B,EAAK8B,O,KA1BT9B,EAAKsB,iBAAiB,SAEtB,WACE,IAAMT,EAAQY,OAAOzB,EAAKa,MAAMa,OAC1BC,EAAOF,OAAOzB,EAAK2B,KAAKD,OACxBE,EAASH,OAAOzB,EAAK4B,OAAOF,OAElC,GAAIb,EAAQ,GAAKc,EAAO,GAAKC,EAAS,EAEpC,YADAZ,EAAAlB,GAASmB,OAAOI,QAAQ,kC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', hendleFormSubmit);\nform.addEventListener('input', handleFormIsLessThenThero);\n\nfunction handleFormIsLessThenThero() {\n  const delay = Number(form.delay.value);\n  const step = Number(form.step.value);\n  const amount = Number(form.amount.value);\n\n  if (delay < 0 || step < 0 || amount < 0) {\n    Notiflix.Notify.failure('Value must be greater than zero');\n    return;\n  }\n}\n\nfunction hendleFormSubmit(event) {\n  event.preventDefault();\n\n  const delay = Number(form.delay.value);\n  const step = Number(form.step.value);\n  const amount = Number(form.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    const amountPosition = i;\n    const currentDelay = delay + i * step;\n\n    createPromise(amountPosition, currentDelay);\n\n    form.reset();\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","setTimeout","Math","random","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","event","preventDefault","Number","value","step","amount","i","reset"],"version":3,"file":"03-promises.65650e9d.js.map"}