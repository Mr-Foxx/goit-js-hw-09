{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,QA0CpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAjDPL,EAAKY,iBAAiB,UActB,SAA0BC,GACxBA,EAAMC,iBAMN,IAJA,IAAMC,EAAQC,OAAOH,EAAMI,OAAOZ,MAAMa,OAClCC,EAAOH,OAAOH,EAAMI,OAAOE,KAAKD,OAChCE,EAASJ,OAAOH,EAAMI,OAAOG,OAAOF,OAEjCG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAInClB,EAHuBkB,EACFN,EAAQM,EAAIF,GAG9BG,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAGjDuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA1B,GAAS2B,OAAOI,QACd,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAInDQ,EAAMI,OAAOa,O,IApCf9B,EAAKY,iBAAiB,SAEtB,WACE,IAAMP,EAAQW,OAAOhB,EAAKK,MAAMa,OAC1BC,EAAOH,OAAOhB,EAAKmB,KAAKD,OACxBE,EAASJ,OAAOhB,EAAKoB,OAAOF,OAElC,GAAIb,EAAQ,GAAKc,EAAO,GAAKC,EAAS,EAEpC,YADAI,EAAA1B,GAAS2B,OAAOI,QAAQ,kC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', hendleFormSubmit);\nform.addEventListener('input', handleFormIsLessThenThero);\n\nfunction handleFormIsLessThenThero() {\n  const delay = Number(form.delay.value);\n  const step = Number(form.step.value);\n  const amount = Number(form.amount.value);\n\n  if (delay < 0 || step < 0 || amount < 0) {\n    Notiflix.Notify.failure('Value must be greater than zero');\n    return;\n  }\n}\n\nfunction hendleFormSubmit(event) {\n  event.preventDefault();\n\n  const delay = Number(event.target.delay.value);\n  const step = Number(event.target.step.value);\n  const amount = Number(event.target.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    const amountPosition = i;\n    const currentDelay = delay + i * step;\n\n    createPromise(amountPosition, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  event.target.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","Number","target","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.2b25fbf6.js.map"}